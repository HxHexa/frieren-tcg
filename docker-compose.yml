services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: frieren_tcg
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d frieren_tcg"]
      interval: 5s
      timeout: 2s
      retries: 20
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  app:
    build: .
    image: frieren-tcg-app:latest
    ports:
      - "3000:3000"
      #- "5555:5555"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      CLIENT_ID: ${CLIENT_ID}
      NODE_ENV: ${NODE_ENV}
      DATABASE_URL: ${DATABASE_URL}
      GUILD_ID_DEV: ${GUILD_ID_DEV}
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

  # prisma-studio:
  #   image: node:lts-alpine3.17
  #   working_dir: /usr/src/app
  #   volumes:
  #     - .:/usr/src/app
  #   command: npx prisma studio --port 5555 --browser none
  #   ports:
  #     - "5555:5555"
  #   env_file:
  #     - .env
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     app:
  #       condition: service_started
  #   restart: unless-stopped

volumes:
  postgres_data: